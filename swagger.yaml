swagger: '2.0'
info:
  title: ChaTop API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:9080
basePath: /api
schemes:
  - http
paths:
  /auth/login:
    post:
      tags:
        - Auth Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
  /auth/register:
    post:
      tags:
        - Auth Module
      summary: Register
      description: API for Register
      parameters:
        - in: body
          name: body
          description: Register Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Register Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
  /auth/me:
    get:
      security:
        - Bearer: []
      tags:
        - Auth Module
      summary: User Profile API
      description: API for getting a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/UserProfile'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error

  /user/{userId}:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for getting a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: userId
          description: User ID
          required: true
          type: number
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/UserProfile'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error

  /rentals :
    get:
      security:
        - Bearer: []
      tags:
        - Rentals Module
      summary: View all rentals
      description: API for rentals
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: get rentals successfully
          schema:
            $ref: "#/definitions/Rentals"
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error

    post:
      security:
        - Bearer: []
      tags:
        - Rentals Module
      summary: Create rental
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateRental'
      produces:
        - application/json
      responses:
        '201':
          description: Rental successfully created
          schema:
            $ref: '#/definitions/RentalResponse'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error

  /rentals/{rentalsId}:
    get:
      security:
        - Bearer: []
      tags:
        - Rentals Module
      summary: View rental details
      description: API for rental details
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: rentalsId
          description: Rental ID
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description : Rental details
          schema:
            $ref: '#/definitions/Rental'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error


    put:
      security:
        - Bearer: []
      tags:
        - Rentals Module
      description: Modify a specific rental.
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: rentalsId
          description: ID of the rental to modify
          required: true
          type: string
        - in: body
          name: body
          description: Rental Payload
          required: true
          schema:
            $ref: '#/definitions/ModifyRental'
      produces:
        - application/json
      responses:
        '200':
          description: Rental successfully created
          schema:
            $ref: '#/definitions/RentalResponse'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      name:
        type: string
        description: user name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      id:
        type: number
      name:
        type: string
      email:
        type: string
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
  Rentals:
    type: object
    properties:
      rentals:
        type: array
        items:
          type: object
          properties:
            id:
              type: number
            name:
              type: string
            surface:
              type: number
            price:
              type: number
            picture:
              type: string
              format: url
            description:
              type: string
            owner_id:
              type: number
            created_at:
              type: string
              format: date
            updated_at:
              type: string
              format: date
  Rental:
    type: object
    properties:
      id:
        type: number
      name:
        type: string
      surface:
        type: number
      price:
        type: number
      picture:
        type: string
        format: url
      description:
        type: string
      owner_id:
        type: number
      created_at:
        type: string
        format: date
      updated_at:
        type: string
        format: date
  CreateRental:
    type: object
    properties:
      name:
        type: string
      surface:
        type: number
      price:
        type: number
      picture:
        type: string
        format: url
      description:
        type: string
  RentalResponse:
    type: object
    properties:
      message:
        type: string
  ModifyRental:
    type: object
    properties:
      name:
        type: string
      surface:
        type: number
      price:
        type: number
      description:
        type: string
